import os
import fitz  # PyMuPDF
import pandas as pd

# Function to extract product statuses
def extract_product_status(doc):
    status = {"Products": "No", "ECH": "No", "ADC": "No"}  # Default states
    for page in doc:
        # Extract text instances to find checkboxes' positions
        text_instances = page.search_for("Products") + page.search_for("ECH") + page.search_for("ADC")
        # Extract annotations (widgets) which are usually form fields
        for annot in page.annots():
            if annot.type[0] == 18:  # Widget type for form fields in PDF
                # Check positions to determine if this annot is near a product name
                annot_rect = annot.rect
                for inst in text_instances:
                    if annot_rect.intersects(inst):
                        # If near, determine if it is checked
                        if annot.field_value == "Yes":  # Assuming 'Yes' represents a checked state
                            product_name = page.get_text("text", clip=inst).strip()
                            status[product_name] = "Yes"
    return status

# List all PDF files in the current directory
pdf_files = [f for f in os.listdir('.') if f.endswith('.pdf')]
data = []

# Read eECH PDF and extract the required information
for file_name in pdf_files:
    with fitz.open(file_name) as doc:
        products_status = extract_product_status(doc)
        parts = file_name.replace('.pdf', '').split('---')
        if len(parts) >= 4:
            document_date = parts[2]
            customer_name = parts[3].replace('-', ' ')
            tax_id = parts[4]
            data.append({
                "Document Date": document_date,
                "Customer Name": customer_name,
                "Tax ID": tax_id,
                "SSA Product": products_status["Products"],
                "ECH": products_status["ECH"],
                "ADC": products_status["ADC"]
            })

# Convert to DataFrame
df = pd.DataFrame(data)
print(df)
